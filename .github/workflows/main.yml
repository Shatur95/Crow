name: Main
on:
  push:
    branches-ignore:
      - 'releases/**'
    paths-ignore:
    - '**.md'
    - '.github/workflows/release.yml'
    - '.gitignore'
    - 'crowdin.yml'
    - 'data/translations/**'
  pull_request:
    paths-ignore:
    - '**.md'
    - '.github/workflows/release.yml'
    - '.gitignore'
    - 'crowdin.yml'
    - 'data/translations/**'
jobs:
  Main:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-latest]
        include:
          - os: ubuntu-18.04
            CXXFLAGS: '-Wall -Wextra -pedantic -Werror'
          - os: windows-latest
            extra-cmake-arguments: '-D VCPKG_TARGET_TRIPLET=x64-windows -D CMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake'
            CXXFLAGS: '/W4' # TODO: Use /WX
    steps:
    - name: Enable Git symlinks
      if: runner.os == 'Windows'
      run: git config --global core.symlinks true

    - name: Clone repo
      uses: actions/checkout@v2.3.3

    - name: Install apt packages
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install extra-cmake-modules libqt5x11extras5-dev qttools5-dev qtmultimedia5-dev libtesseract-dev

    - name: Install PkgConfig to find versions from vcpkg
      if: runner.os == 'Windows'
      run: choco install pkgconfiglite

    - name: Restore from cache and run vcpkg
      uses: lukka/run-vcpkg@v4.1
      with:
        vcpkgArguments: '@.github/workflows/vcpkg.txt'
        appendedCacheKey: ${{ hashFiles(.github/workflows/vcpkg.txt) }}
        vcpkgGitCommitId: 2020.07

    - name: Build
      run: |
        mkdir build
        cd build
        cmake .. -D WITH_PORTABLE_MODE=ON ${{ matrix.extra-cmake-arguments }}
        cmake --build . --parallel 2
      env:
        CXXFLAGS: ${{ matrix.CXXFLAGS }}
